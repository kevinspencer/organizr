#!/usr/bin/env perl
# Copyright 2010-2022 Kevin Spencer <kevin@kevinspencer.org>
#
# Permission to use, copy, modify, distribute, and sell this software and its
# documentation for any purpose is hereby granted without fee, provided that
# the above copyright notice appear in all copies and that both that
# copyright notice and this permission notice appear in supporting
# documentation.  No representations are made about the suitability of this
# software for any purpose.  It is provided "as is" without express or 
# implied warranty.
#
################################################################################

use File::Basename;
use File::Copy;
use File::HomeDir;
use File::Path;
use File::Spec;
use File::stat;
use Getopt::Long;
use Image::ExifTool;
use Time::localtime;
use strict;
use warnings;

our $VERSION = '0.21';

my $cli_store_dir;
GetOptions ("storedir=s" => \$cli_store_dir);

my $user      = getpwuid($<);
my $BASEDIR   = File::Spec->catdir(File::HomeDir->my_home(), 'Pictures');
my $IMPORTDIR = File::Spec->catdir($BASEDIR, 'to-import');
my $STOREDIR  = File::Spec->catdir($cli_store_dir ? $cli_store_dir : $BASEDIR, 'storage');

my %seendir;
sanity_check_directories($BASEDIR, $IMPORTDIR, $STOREDIR);
process_import_directory($IMPORTDIR);

sub sanity_check_directories {
    my @directories = @_;

    for my $directory (@directories) {
        die "$directory doesn't exist\n" if (! -d $directory);
    }
}

sub process_import_directory {
    my $dir = shift;

    return if ($dir =~ /$STOREDIR/);
    opendir(DIR, $dir) || die "Could not open $dir - $!\n";
    for my $filefound (grep /\.JPG$|\.CR2$|\.NEF$|\.JPEG$/i, readdir(DIR)) {
        my $filefound_fullpath = File::Spec->catfile($dir, $filefound);
        if (-d $filefound_fullpath) {
            process_import_directory($filefound_fullpath);
        } else {
            process_import_file($filefound_fullpath);
        }
    }
}

sub process_import_file {
    my $filefound_fullpath = shift;

    my $img_date = get_image_date($filefound_fullpath);

    my $finaldir = File::Spec->catdir($STOREDIR, $img_date->{YYYY}, "$img_date->{YYYY}-$img_date->{MM}");
    if (! $seendir{$finaldir}++) {
        if (! -d $finaldir) {
            eval { mkpath($finaldir) };
            if ($@) {
                die $@;
            }
        }
    }
    # make sure we don't clobber an existing file...
    my $finalfile = File::Spec->catfile($finaldir, basename($filefound_fullpath));
    if (-e $finalfile) {
        # file already exists so we'll just add a sequence # and rename it
        my $seq = 0;
        while(1) {
            $seq++;
            my ($name, undef, $suffix) = fileparse($filefound_fullpath, qr/\.[^.]*/);
            $name = $name . '.' . $seq . $suffix;
            $finalfile = File::Spec->catfile($finaldir, $name);
            next if (-e $finalfile);
            my $newfile_fullpath = File::Spec->catfile(dirname($filefound_fullpath), $name);
            rename($filefound_fullpath, $newfile_fullpath) ||
                die "Could not rename $filefound_fullpath to $newfile_fullpath $!\n";
            $filefound_fullpath = $newfile_fullpath;
            last;
        }
    }
    move($filefound_fullpath, $finaldir) ||
        die "Couldn't move $filefound_fullpath to $finaldir - $!\n";
}

sub get_image_date {
    my $filefound_fullpath = shift;

    # we'll attempt to extract the date created from Exif information
    my $exiftool = Image::ExifTool->new();
    $exiftool->ExtractInfo($filefound_fullpath);

    my $date_created = $exiftool->GetValue('DateCreated');
    $date_created    = $exiftool->GetValue('CreateDate') if (! $date_created);

    # 2018:12:05 03:07:41.082
    my %imgdate = ();
    if (($date_created) && ($date_created =~ /(\d{4}):(\d{2}):(\d{2})/)) {
        $imgdate{YYYY} = $1;
        $imgdate{MM}   = $2;
    }

    # if for some reason we don't have Exif data fall back to file date from disk
    if (! %imgdate) {
        my $stat = stat($filefound_fullpath);
        my $time = localtime($stat->mtime());
        $imgdate{YYYY} = $time->year() + 1900;
        $imgdate{MM}   = sprintf("%02d", $time->mon() + 1);
    }

    return \%imgdate;
}
