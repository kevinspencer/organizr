#!/usr/bin/env perl
# Copyright 2010-2019 Kevin Spencer <kevin@kevinspencer.org>
#
# Permission to use, copy, modify, distribute, and sell this software and its
# documentation for any purpose is hereby granted without fee, provided that
# the above copyright notice appear in all copies and that both that
# copyright notice and this permission notice appear in supporting
# documentation.  No representations are made about the suitability of this
# software for any purpose.  It is provided "as is" without express or 
# implied warranty.
#
################################################################################

use File::Basename;
use File::Copy;
use File::HomeDir;
use File::Path;
use File::Spec;
use File::stat;
use Image::ExifTool;
use Time::localtime;
use strict;
use warnings;

our $VERSION = '0.13';

my $user      = getpwuid($<);
my $BASEDIR   = File::Spec->catdir(File::HomeDir->my_home(), 'Pictures');
my $IMPORTDIR = File::Spec->catdir($BASEDIR, 'to-import');
my $STOREDIR  = File::Spec->catdir($BASEDIR, 'storage');

my %seendir;
processImportDirectory($IMPORTDIR);

sub processImportDirectory {
    my $dir = shift;

    return if ($dir =~ /$STOREDIR/);
    opendir(DIR, $dir) || die "Could not open $dir - $!\n";
    for my $filefound (grep /\.JPG$|\.CR2$|\.JPEG$/i, readdir(DIR)) {
        my $fileFoundFullPath = File::Spec->catfile($dir, $filefound);
        if (-d $fileFoundFullPath) {
            processImportDirectory($fileFoundFullPath);
        } else {
            processImportFile($fileFoundFullPath);
        }
    }
}

sub processImportFile {
    my $fileFoundFullPath = shift;

    # we'll attempt to extract the date created from Exif information
    my $exiftool = Image::ExifTool->new();
    $exiftool->ExtractInfo($fileFoundFullPath);

    my $date_created = $exiftool->GetValue('DateCreated');
    # 2018:12:05 03:07:41.082
    my ($YYYY, $MM);
    if ($date_created =~ /(\d{4}):(\d{2}):(\d{2})/) {
        $YYYY = $1;
        $MM   = $2;
    }
    
    my $finaldir = File::Spec->catdir($STOREDIR, $YYYY, "$YYYY-$MM");
    if (! $seendir{$finaldir}++) {
        if (! -d $finaldir) {
            eval { mkpath($finaldir) };
            if ($@) {
                die $@;
            }
        }
    }
    # make sure we don't clobber an existing file...
    my $finalfile = File::Spec->catfile($finaldir, basename($fileFoundFullPath));
    if (-e $finalfile) {
        # file already exists so we'll just add a sequence # and rename it
        my $seq = 0;
        while(1) {
            $seq++;
            my ($name, undef, $suffix) = fileparse($fileFoundFullPath, qr/\.[^.]*/);
            $name = $name . '.' . $seq . $suffix;
            $finalfile = File::Spec->catfile($finaldir, $name);
            next if (-e $finalfile);
            my $newFileFullPath = File::Spec->catfile(dirname($fileFoundFullPath), $name);
            rename($fileFoundFullPath, $newFileFullPath) ||
                die "Could not rename $fileFoundFullPath to $newFileFullPath $!\n";
            $fileFoundFullPath = $newFileFullPath;
            last;
        }
    }
    move($fileFoundFullPath, $finaldir) ||
        die "Couldn't move $fileFoundFullPath to $finaldir - $!\n";
}
